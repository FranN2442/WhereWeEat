/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./src/js/geoCode.js":
/*!***************************!*\
  !*** ./src/js/geoCode.js ***!
  \***************************/
/***/ (() => {

eval("\r\nlet geocoder;\r\nlet map;\r\n\r\n\r\n\r\nfunction initMap() {\r\n\r\n    geocoder = new google.maps.Geocoder();\r\n\r\n    map = new google.maps.Map(document.getElementById(\"map\"), {\r\n        zoom: 13,\r\n    });\r\n\r\n}\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", () => {\r\n    let userBtn = document.getElementById(\"my-loc\");\r\n\r\n    userBtn.addEventListener(\"click\", () => {\r\n\r\n        navigator.geolocation.getCurrentPosition((position) => {\r\n\r\n            let cardRow = document.getElementById(\"cards\");\r\n            cardRow.innerHTML = \"\"\r\n            let coords = {\"lat\" : position.coords.latitude, \"lng\": position.coords.longitude}\r\n            setCenter(coords);\r\n            searchRestaurants(coords)\r\n\r\n\r\n        })\r\n\r\n    })\r\n\r\n\r\n    new SpainMap({\r\n        id: 'geoMap', //(Requerido) Elemento HTML en el que se renderizará el mapa\r\n        width: 700, //(Requerido) Ancho del mapa\r\n        height: 400, //(Requerido) Alto del mapa\r\n        fillColor: \"#eeeeee\", // color de relleno del mapa\r\n        strokeColor: \"#bbbbbb\", // color de las líneas de frontera\r\n        strokeWidth: 1, // ancho de las líneas de frontera\r\n        selectedColor: \"#99eeee\", // color de relleno de la provincia al pasar el ratón por encima\r\n        animationDuration: 200, // Duración de la animación de salida\r\n        onClick: function (province, mouseevent) {\r\n            let mapDiv = document.getElementById('map');\r\n            if (mapDiv.hidden) {\r\n                initMap()\r\n                mapDiv.removeAttribute(\"hidden\")\r\n                getLangLat(province.name);\r\n\r\n            } else {\r\n\r\n                getLangLat(province.name)\r\n\r\n            }\r\n        },\r\n        onMouseOver: function (province, mouseevent) {\r\n\r\n        },\r\n        onMouseOut: function (province, mouseevent) {\r\n            // Método que se ejecutará al salir de una provincia\r\n        }\r\n    });\r\n\r\n})\r\n\r\nfunction getLangLat(provinica) {\r\n\r\n    var provincia = provinica + ', España';\r\n\r\n    // Realizar la solicitud de geocodificación inversa\r\n    geocoder.geocode({ 'address': provincia }, function (results, status) {\r\n        if (status === 'OK') {\r\n            // Obtener la latitud y longitud\r\n            let coords = { \"lat\": results[0].geometry.location.lat(), \"lng\": results[0].geometry.location.lng() }\r\n\r\n            setCenter(coords);\r\n            searchRestaurants(coords);\r\n        } else {\r\n            console.error('Geocodificación fallida:', status);\r\n        }\r\n    });\r\n\r\n}\r\n\r\nfunction setCenter(pos) {\r\n\r\n    const ciudadCoords = {\r\n        lat: pos.lat,\r\n        lng: pos.lng,\r\n    };\r\n    map.setCenter(ciudadCoords);\r\n\r\n}\r\nfunction searchRestaurants(location) {\r\n    const request = {\r\n        location: location,\r\n        radius: '5',\r\n        query: \"resturant\",\r\n        fields: [\"name\", \"geometry\"],\r\n    };\r\n\r\n    service = new google.maps.places.PlacesService(map);\r\n    service.textSearch(request, (results, status) => {\r\n        if (status === google.maps.places.PlacesServiceStatus.OK && results) {\r\n            let cardRow = document.getElementById(\"cards\");\r\n            cardRow.innerHTML = \"\"\r\n            for (let i = 0; i < results.length; i++) {\r\n                if (results[i].business_status == \"OPERATIONAL\") {\r\n\r\n                    createCard(results[i])\r\n                    createMarker(results[i])\r\n                    console.log(results[i]);\r\n\r\n                }\r\n            }\r\n        }\r\n    });\r\n}\r\n\r\n// Añadir los marcadores de los restaurantes.\r\nfunction createMarker(place) {\r\n    if (!place.geometry || !place.geometry.location) return;\r\n\r\n    const marker = new google.maps.Marker({\r\n        map,\r\n        position: place.geometry.location,\r\n    });\r\n}\r\n\r\nfunction createCard(info) {\r\n\r\n    let cardRow = document.getElementById(\"cards\");\r\n    cardRow.removeAttribute(\"hidden\")\r\n    // Crear el elemento div con la clase \"col-md-3\"\r\n    const colDiv = document.createElement(\"div\");\r\n    colDiv.classList.add(\"col-md-3\");\r\n\r\n    const cardDiv = document.createElement(\"div\");\r\n    cardDiv.classList.add(\"card\", \"text-color-azulMarino\", \"bg-color-blancoCrema\", \"m-3\");\r\n\r\n\r\n    const cardHeaderDiv = document.createElement(\"div\");\r\n    cardHeaderDiv.classList.add(\"card-header\", \"text-color-azulMarino\", \"bg-color-blancoCrema\");\r\n\r\n    cardHeaderDiv.textContent = info.name;\r\n\r\n    const img = document.createElement(\"img\");\r\n    img.classList.add(\"card-img-top\");\r\n    img.setAttribute(\"src\", \"./assets/img/cards/asiatic-food.jpg\");\r\n    img.setAttribute(\"alt\", \"erasmus\");\r\n\r\n\r\n    // Crear el elemento div con la clase \"card-body\"\r\n    const cardBodyDiv = document.createElement(\"div\");\r\n    cardBodyDiv.classList.add(\"card-body\");\r\n\r\n    // Crear el elemento p con la clase \"card-text\" y texto \"Podras disfrutar del mejor pa amb tumaca\"\r\n    const paragraph = document.createElement(\"p\");\r\n    paragraph.classList.add(\"card-text\");\r\n    paragraph.textContent = \"Dirección: \" + info.formatted_address;\r\n\r\n    cardBodyDiv.appendChild(paragraph);\r\n    cardDiv.appendChild(cardHeaderDiv);cardDiv.appendChild(img);\r\n    cardDiv.appendChild(cardBodyDiv);\r\n    colDiv.appendChild(cardDiv);\r\n\r\n    cardRow.appendChild(colDiv);\r\n}\r\n\n\n//# sourceURL=webpack://whereweeat/./src/js/geoCode.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./src/js/geoCode.js"]();
/******/ 	
/******/ })()
;